name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to Production EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Update system
          sudo yum update -y
          
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -a -G docker ec2-user
          fi
          
          # Install Docker Compose if not present
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Install Git if not present
          if ! command -v git &> /dev/null; then
            sudo yum install -y git
          fi
          
          # Clone or update repository
          if [ -d "/home/ec2-user/football-tournaments" ]; then
            cd /home/ec2-user/football-tournaments
            git pull origin main
          else
            git clone https://github.com/Slazhen/tournament.git /home/ec2-user/football-tournaments
            cd /home/ec2-user/football-tournaments
          fi
          
          # Build and deploy with Docker
          docker-compose -f docker-compose.prod.yml down || true
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml up -d
          
          # Configure Nginx for SSL
          sudo tee /etc/nginx/conf.d/football-tournaments.conf > /dev/null << 'NGINX_EOF'
          server {
              listen 80;
              server_name myfootballtournament.com;
              return 301 https://$server_name$request_uri;
          }
          
          server {
              listen 443 ssl http2;
              server_name myfootballtournament.com;
              
              ssl_certificate /etc/letsencrypt/live/myfootballtournament.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/myfootballtournament.com/privkey.pem;
              
              location / {
                  proxy_pass http://localhost:80;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          NGINX_EOF
          
          # Install Certbot and get SSL certificate
          if ! command -v certbot &> /dev/null; then
            sudo yum install -y certbot python3-certbot-nginx
          fi
          
          # Get SSL certificate
          sudo certbot --nginx -d myfootballtournament.com --non-interactive --agree-tos --email admin@myfootballtournament.com || true
          
          # Restart Nginx
          sudo systemctl restart nginx
          sudo systemctl enable nginx
          
          echo "✅ Production deployment completed!"
          
    - name: Deploy to Development EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DEV_EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Update system
          sudo yum update -y
          
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -a -G docker ec2-user
          fi
          
          # Install Docker Compose if not present
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Install Git if not present
          if ! command -v git &> /dev/null; then
            sudo yum install -y git
          fi
          
          # Clone or update repository
          if [ -d "/home/ec2-user/football-tournaments" ]; then
            cd /home/ec2-user/football-tournaments
            git pull origin main
          else
            git clone https://github.com/Slazhen/tournament.git /home/ec2-user/football-tournaments
            cd /home/ec2-user/football-tournaments
          fi
          
          # Build and deploy with Docker
          docker-compose -f docker-compose.dev.yml down || true
          docker-compose -f docker-compose.dev.yml build
          docker-compose -f docker-compose.dev.yml up -d
          
          # Configure Nginx for SSL
          sudo tee /etc/nginx/conf.d/football-tournaments.conf > /dev/null << 'NGINX_EOF'
          server {
              listen 80;
              server_name dev.myfootballtournament.com;
              return 301 https://$server_name$request_uri;
          }
          
          server {
              listen 443 ssl http2;
              server_name dev.myfootballtournament.com;
              
              ssl_certificate /etc/letsencrypt/live/dev.myfootballtournament.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/dev.myfootballtournament.com/privkey.pem;
              
              location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          NGINX_EOF
          
          # Install Certbot and get SSL certificate
          if ! command -v certbot &> /dev/null; then
            sudo yum install -y certbot python3-certbot-nginx
          fi
          
          # Get SSL certificate
          sudo certbot --nginx -d dev.myfootballtournament.com --non-interactive --agree-tos --email admin@myfootballtournament.com || true
          
          # Restart Nginx
          sudo systemctl restart nginx
          sudo systemctl enable nginx
          
          echo "✅ Development deployment completed!"